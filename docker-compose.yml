version: '3.9'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.5
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - ${ZOOKEPER_PORT}:2181

  kafka:
    image: confluentinc/cp-kafka:5.2.5
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - ${BROKER_PORT}:29092
      - ${BROKER_PORT_2}:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-setup:
      image: confluentinc/cp-kafka:5.2.5
      hostname: kafka-setup
      container_name: kafka-setup
      restart: unless-stopped
      depends_on:
        - kafka
      volumes:
        - ./kafka_setup/entrypoint.sh:/entrypoint.sh
      entrypoint: ["/bin/sh", "./entrypoint.sh"]
      healthcheck:
        test: ["CMD-SHELL","bash", "-c", "'kafka-topics --topic tasks --describe --zookeeper zookeeper:2181'"]
        interval: 2s
        timeout: 2s
        retries: 15
        start_period: 40s
      environment:
        KAFKA_BROKER_ID: ignored
        KAFKA_ZOOKEEPER_CONNECT: ignored

  kafka-worker-cache:
    image: "redis:alpine"
    container_name: kafka-worker-cache
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 2s
      timeout: 2s
      retries: 15
    ports:
      - ${REDIS_PORT}:6379
    environment:
      - REDIS_REPLICATION_MODE=master

  kafka-worker:
    build:
      dockerfile: kafka_worker.Dockerfile
      context: ./
    image: kafka-worker
    container_name: kafka-worker
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    restart: unless-stopped
    environment:
      BROKER_URL: kafka://kafka:29092
      UPSERT_RECORDS: "false"
      REDIS_HOST: kafka-worker-cache
      REDIS_PORT: ${REDIS_PORT}
      COMMIT_EVERY_X_ROWS: 100
      VERBOSE_DB: "false"
    volumes:
      - ./reports:/app/reports
      - ./kafka_worker/entrypoint.sh:/entrypoint.sh
    depends_on:
      kafka-setup:
        condition: service_healthy
      kafka-worker-cache:
        condition: service_healthy

  ftp-client:
    build:
      dockerfile: ftp_client.Dockerfile
      context: ./
    image: ftp-client
    container_name: ftp-client
    entrypoint: [ "faust","-A","main","worker", "-l", "info" ]
    restart: unless-stopped
    environment:
      BROKER_URL: kafka://kafka:29092
      EXTRACTION_URL: ${EXTRACTION_URL}
    depends_on:
      kafka-setup:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - ${KAFKA_UI_PORT}:8080
    restart: unless-stopped
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_READONLY=true